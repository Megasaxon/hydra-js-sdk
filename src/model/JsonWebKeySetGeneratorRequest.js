/**
 * ORY Hydra
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JsonWebKeySetGeneratorRequest model module.
 * @module model/JsonWebKeySetGeneratorRequest
 * @version latest
 */
class JsonWebKeySetGeneratorRequest {
    /**
     * Constructs a new <code>JsonWebKeySetGeneratorRequest</code>.
     * @alias module:model/JsonWebKeySetGeneratorRequest
     * @param alg {String} The algorithm to be used for creating the key. Supports \"RS256\", \"ES512\", \"HS512\", and \"HS256\"
     * @param kid {String} The kid of the key to be created
     * @param use {String} The \"use\" (public key use) parameter identifies the intended use of the public key. The \"use\" parameter is employed to indicate whether a public key is used for encrypting data or verifying the signature on data. Valid values are \"enc\" and \"sig\".
     */
    constructor(alg, kid, use) { 
        
        JsonWebKeySetGeneratorRequest.initialize(this, alg, kid, use);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, alg, kid, use) { 
        obj['alg'] = alg;
        obj['kid'] = kid;
        obj['use'] = use;
    }

    /**
     * Constructs a <code>JsonWebKeySetGeneratorRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JsonWebKeySetGeneratorRequest} obj Optional instance to populate.
     * @return {module:model/JsonWebKeySetGeneratorRequest} The populated <code>JsonWebKeySetGeneratorRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JsonWebKeySetGeneratorRequest();

            if (data.hasOwnProperty('alg')) {
                obj['alg'] = ApiClient.convertToType(data['alg'], 'String');
            }
            if (data.hasOwnProperty('kid')) {
                obj['kid'] = ApiClient.convertToType(data['kid'], 'String');
            }
            if (data.hasOwnProperty('use')) {
                obj['use'] = ApiClient.convertToType(data['use'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The algorithm to be used for creating the key. Supports \"RS256\", \"ES512\", \"HS512\", and \"HS256\"
 * @member {String} alg
 */
JsonWebKeySetGeneratorRequest.prototype['alg'] = undefined;

/**
 * The kid of the key to be created
 * @member {String} kid
 */
JsonWebKeySetGeneratorRequest.prototype['kid'] = undefined;

/**
 * The \"use\" (public key use) parameter identifies the intended use of the public key. The \"use\" parameter is employed to indicate whether a public key is used for encrypting data or verifying the signature on data. Valid values are \"enc\" and \"sig\".
 * @member {String} use
 */
JsonWebKeySetGeneratorRequest.prototype['use'] = undefined;






export default JsonWebKeySetGeneratorRequest;

