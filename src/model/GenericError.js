/**
 * ORY Hydra
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GenericError model module.
 * @module model/GenericError
 * @version latest
 */
class GenericError {
    /**
     * Constructs a new <code>GenericError</code>.
     * Error responses are sent when an error (e.g. unauthorized, bad request, ...) occurred.
     * @alias module:model/GenericError
     * @param error {String} Name is the error name.
     */
    constructor(error) { 
        
        GenericError.initialize(this, error);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, error) { 
        obj['error'] = error;
    }

    /**
     * Constructs a <code>GenericError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenericError} obj Optional instance to populate.
     * @return {module:model/GenericError} The populated <code>GenericError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenericError();

            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('error_code')) {
                obj['error_code'] = ApiClient.convertToType(data['error_code'], 'Number');
            }
            if (data.hasOwnProperty('error_debug')) {
                obj['error_debug'] = ApiClient.convertToType(data['error_debug'], 'String');
            }
            if (data.hasOwnProperty('error_hint')) {
                obj['error_hint'] = ApiClient.convertToType(data['error_hint'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Name is the error name.
 * @member {String} error
 */
GenericError.prototype['error'] = undefined;

/**
 * Code represents the error status code (404, 403, 401, ...).
 * @member {Number} error_code
 */
GenericError.prototype['error_code'] = undefined;

/**
 * Debug contains debug information. This is usually not available and has to be enabled.
 * @member {String} error_debug
 */
GenericError.prototype['error_debug'] = undefined;

/**
 * Hint contains further information on the nature of the error.
 * @member {String} error_hint
 */
GenericError.prototype['error_hint'] = undefined;






export default GenericError;

