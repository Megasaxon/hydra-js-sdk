/**
 * ORY Hydra
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OryHydra);
  }
}(this, function(expect, OryHydra) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OryHydra.Client();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Client', function() {
    it('should create an instance of Client', function() {
      // uncomment below and update the code to test Client
      //var instane = new OryHydra.Client();
      //expect(instance).to.be.a(OryHydra.Client);
    });

    it('should have the property allowedCorsOrigins (base name: "allowed_cors_origins")', function() {
      // uncomment below and update the code to test the property allowedCorsOrigins
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property audience (base name: "audience")', function() {
      // uncomment below and update the code to test the property audience
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "client_id")', function() {
      // uncomment below and update the code to test the property clientId
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property clientName (base name: "client_name")', function() {
      // uncomment below and update the code to test the property clientName
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property clientSecret (base name: "client_secret")', function() {
      // uncomment below and update the code to test the property clientSecret
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property clientSecretExpiresAt (base name: "client_secret_expires_at")', function() {
      // uncomment below and update the code to test the property clientSecretExpiresAt
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property clientUri (base name: "client_uri")', function() {
      // uncomment below and update the code to test the property clientUri
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property contacts (base name: "contacts")', function() {
      // uncomment below and update the code to test the property contacts
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property grantTypes (base name: "grant_types")', function() {
      // uncomment below and update the code to test the property grantTypes
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property jwks (base name: "jwks")', function() {
      // uncomment below and update the code to test the property jwks
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property jwksUri (base name: "jwks_uri")', function() {
      // uncomment below and update the code to test the property jwksUri
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property logoUri (base name: "logo_uri")', function() {
      // uncomment below and update the code to test the property logoUri
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property policyUri (base name: "policy_uri")', function() {
      // uncomment below and update the code to test the property policyUri
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property redirectUris (base name: "redirect_uris")', function() {
      // uncomment below and update the code to test the property redirectUris
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property requestObjectSigningAlg (base name: "request_object_signing_alg")', function() {
      // uncomment below and update the code to test the property requestObjectSigningAlg
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property requestUris (base name: "request_uris")', function() {
      // uncomment below and update the code to test the property requestUris
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property responseTypes (base name: "response_types")', function() {
      // uncomment below and update the code to test the property responseTypes
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property scope (base name: "scope")', function() {
      // uncomment below and update the code to test the property scope
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property sectorIdentifierUri (base name: "sector_identifier_uri")', function() {
      // uncomment below and update the code to test the property sectorIdentifierUri
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property subjectType (base name: "subject_type")', function() {
      // uncomment below and update the code to test the property subjectType
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property tokenEndpointAuthMethod (base name: "token_endpoint_auth_method")', function() {
      // uncomment below and update the code to test the property tokenEndpointAuthMethod
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property tosUri (base name: "tos_uri")', function() {
      // uncomment below and update the code to test the property tosUri
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

    it('should have the property userinfoSignedResponseAlg (base name: "userinfo_signed_response_alg")', function() {
      // uncomment below and update the code to test the property userinfoSignedResponseAlg
      //var instane = new OryHydra.Client();
      //expect(instance).to.be();
    });

  });

}));
