/**
 * ORY Hydra
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OryHydra);
  }
}(this, function(expect, OryHydra) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OryHydra.AdminApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AdminApi', function() {
    describe('acceptConsentRequest', function() {
      it('should call acceptConsentRequest successfully', function(done) {
        //uncomment below and update the code to test acceptConsentRequest
        //instance.acceptConsentRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('acceptLoginRequest', function() {
      it('should call acceptLoginRequest successfully', function(done) {
        //uncomment below and update the code to test acceptLoginRequest
        //instance.acceptLoginRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('acceptLogoutRequest', function() {
      it('should call acceptLogoutRequest successfully', function(done) {
        //uncomment below and update the code to test acceptLogoutRequest
        //instance.acceptLogoutRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createJsonWebKeySet', function() {
      it('should call createJsonWebKeySet successfully', function(done) {
        //uncomment below and update the code to test createJsonWebKeySet
        //instance.createJsonWebKeySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOAuth2Client', function() {
      it('should call createOAuth2Client successfully', function(done) {
        //uncomment below and update the code to test createOAuth2Client
        //instance.createOAuth2Client(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteJsonWebKey', function() {
      it('should call deleteJsonWebKey successfully', function(done) {
        //uncomment below and update the code to test deleteJsonWebKey
        //instance.deleteJsonWebKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteJsonWebKeySet', function() {
      it('should call deleteJsonWebKeySet successfully', function(done) {
        //uncomment below and update the code to test deleteJsonWebKeySet
        //instance.deleteJsonWebKeySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOAuth2Client', function() {
      it('should call deleteOAuth2Client successfully', function(done) {
        //uncomment below and update the code to test deleteOAuth2Client
        //instance.deleteOAuth2Client(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('flushInactiveOAuth2Tokens', function() {
      it('should call flushInactiveOAuth2Tokens successfully', function(done) {
        //uncomment below and update the code to test flushInactiveOAuth2Tokens
        //instance.flushInactiveOAuth2Tokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConsentRequest', function() {
      it('should call getConsentRequest successfully', function(done) {
        //uncomment below and update the code to test getConsentRequest
        //instance.getConsentRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJsonWebKey', function() {
      it('should call getJsonWebKey successfully', function(done) {
        //uncomment below and update the code to test getJsonWebKey
        //instance.getJsonWebKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJsonWebKeySet', function() {
      it('should call getJsonWebKeySet successfully', function(done) {
        //uncomment below and update the code to test getJsonWebKeySet
        //instance.getJsonWebKeySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLoginRequest', function() {
      it('should call getLoginRequest successfully', function(done) {
        //uncomment below and update the code to test getLoginRequest
        //instance.getLoginRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLogoutRequest', function() {
      it('should call getLogoutRequest successfully', function(done) {
        //uncomment below and update the code to test getLogoutRequest
        //instance.getLogoutRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOAuth2Client', function() {
      it('should call getOAuth2Client successfully', function(done) {
        //uncomment below and update the code to test getOAuth2Client
        //instance.getOAuth2Client(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('introspectOAuth2Token', function() {
      it('should call introspectOAuth2Token successfully', function(done) {
        //uncomment below and update the code to test introspectOAuth2Token
        //instance.introspectOAuth2Token(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOAuth2Clients', function() {
      it('should call listOAuth2Clients successfully', function(done) {
        //uncomment below and update the code to test listOAuth2Clients
        //instance.listOAuth2Clients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSubjectConsentSessions', function() {
      it('should call listSubjectConsentSessions successfully', function(done) {
        //uncomment below and update the code to test listSubjectConsentSessions
        //instance.listSubjectConsentSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectConsentRequest', function() {
      it('should call rejectConsentRequest successfully', function(done) {
        //uncomment below and update the code to test rejectConsentRequest
        //instance.rejectConsentRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectLoginRequest', function() {
      it('should call rejectLoginRequest successfully', function(done) {
        //uncomment below and update the code to test rejectLoginRequest
        //instance.rejectLoginRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectLogoutRequest', function() {
      it('should call rejectLogoutRequest successfully', function(done) {
        //uncomment below and update the code to test rejectLogoutRequest
        //instance.rejectLogoutRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('revokeAuthenticationSession', function() {
      it('should call revokeAuthenticationSession successfully', function(done) {
        //uncomment below and update the code to test revokeAuthenticationSession
        //instance.revokeAuthenticationSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('revokeConsentSessions', function() {
      it('should call revokeConsentSessions successfully', function(done) {
        //uncomment below and update the code to test revokeConsentSessions
        //instance.revokeConsentSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateJsonWebKey', function() {
      it('should call updateJsonWebKey successfully', function(done) {
        //uncomment below and update the code to test updateJsonWebKey
        //instance.updateJsonWebKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateJsonWebKeySet', function() {
      it('should call updateJsonWebKeySet successfully', function(done) {
        //uncomment below and update the code to test updateJsonWebKeySet
        //instance.updateJsonWebKeySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOAuth2Client', function() {
      it('should call updateOAuth2Client successfully', function(done) {
        //uncomment below and update the code to test updateOAuth2Client
        //instance.updateOAuth2Client(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
